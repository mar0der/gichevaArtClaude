name: Deploy to Server

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker images
      run: |
        docker compose build
        docker images | grep gichevaart
        docker save $(docker images | grep gichevaart | awk '{print $1":"$2}' | tr '\n' ' ') | gzip > gichevaart-images.tar.gz
        ls -lh gichevaart-images.tar.gz

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -H nerdstips.com >> ~/.ssh/known_hosts
        # Test the key
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key root@nerdstips.com "echo 'SSH connection successful'"

    - name: Copy files to server
      run: |
        scp -i ~/.ssh/deploy_key gichevaart-images.tar.gz docker-compose.yml root@nerdstips.com:/tmp/

    - name: Deploy on server
      run: |
        ssh -i ~/.ssh/deploy_key root@nerdstips.com << 'EOF'
          mkdir -p /var/www/gichevaart
          mv /tmp/docker-compose.yml /var/www/gichevaart/
          cd /var/www/gichevaart
          docker load < /tmp/gichevaart-images.tar.gz
          docker compose down || true
          docker compose up -d
          rm /tmp/gichevaart-images.tar.gz
          docker ps | grep gichevaart
        EOF